{"version":3,"sources":["Component/Display.js","App.js","serviceWorker.js","index.js"],"names":["Display","slide","num","container","document","querySelector","dot1","dot2","dot3","classList","add","remove","className","src","alt","onClick","type","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gPAgGeA,E,2MA7FbC,MAAQ,SAACC,GACP,IAAIC,EAAYC,SAASC,cAAc,kBACnCC,EAAOF,SAASC,cAAc,SAC9BE,EAAOH,SAASC,cAAc,SAC9BG,EAAOJ,SAASC,cAAc,SAEtB,IAARH,GACFI,EAAKG,UAAUC,IAAI,UACnBJ,EAAKG,UAAUE,OAAO,YACtBJ,EAAKE,UAAUC,IAAI,YACnBF,EAAKC,UAAUC,IAAI,YACnBH,EAAKE,UAAUE,OAAO,UACtBH,EAAKC,UAAUE,OAAO,UACtBR,EAAUM,UAAUC,IAAI,mBACxBP,EAAUM,UAAUE,OAAO,mBAC3BR,EAAUM,UAAUE,OAAO,oBACV,IAART,GACTK,EAAKE,UAAUC,IAAI,UACnBH,EAAKE,UAAUE,OAAO,YACtBL,EAAKG,UAAUC,IAAI,YACnBF,EAAKC,UAAUC,IAAI,YACnBJ,EAAKG,UAAUE,OAAO,UACtBH,EAAKC,UAAUE,OAAO,UACtBR,EAAUM,UAAUC,IAAI,mBACxBP,EAAUM,UAAUE,OAAO,mBAC3BR,EAAUM,UAAUE,OAAO,oBACV,IAART,IACTM,EAAKC,UAAUC,IAAI,UACnBF,EAAKC,UAAUE,OAAO,YACtBL,EAAKG,UAAUC,IAAI,YACnBH,EAAKE,UAAUC,IAAI,YACnBJ,EAAKG,UAAUE,OAAO,UACtBJ,EAAKE,UAAUE,OAAO,UACtBR,EAAUM,UAAUC,IAAI,mBACxBP,EAAUM,UAAUE,OAAO,mBAC3BR,EAAUM,UAAUE,OAAO,qB,wEAIrB,IAAD,OACP,OACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,SAAd,0BAA6C,0BAAMA,UAAU,UAAhB,eAE/C,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAAYC,IAAI,uCAAuCC,IAAI,iBAE5E,wBAAIF,UAAU,aAAd,kBACA,uBAAGA,UAAU,gCAAb,2QACA,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,aAAd,kBACA,uBAAGA,UAAU,aAAb,oBAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAAYC,IAAI,uCAAuCC,IAAI,eAE5E,wBAAIF,UAAU,aAAd,kBACA,uBAAGA,UAAU,iCAAb,2QACA,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,aAAd,kBACA,uBAAGA,UAAU,aAAb,oBAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAAYC,IAAI,uCAAuCC,IAAI,WAE5E,wBAAIF,UAAU,aAAd,kBACA,uBAAGA,UAAU,iCAAb,2QACA,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,aAAd,kBACA,uBAAGA,UAAU,aAAb,sBAKR,yBAAKA,UAAU,kBACb,yBAAKG,QAAS,WAAK,EAAKd,MAAM,IAAKW,UAAU,qBAC7C,yBAAKG,QAAS,WAAK,EAAKd,MAAM,IAAKW,UAAU,uBAC7C,yBAAKG,QAAS,WAAK,EAAKd,MAAM,IAAKW,UAAU,wBAE/C,4BAAQA,UAAU,SAASI,KAAK,UAAhC,kB,GAxFcC,aCSPC,MARf,WACE,OACE,yBAAKN,UAAU,OACb,kBAAC,EAAD,QCMcO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASsB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.fd16f566.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Display extends Component {\n  slide = (num) => {\n    let container = document.querySelector(\".col-container\")\n    let dot1 = document.querySelector(\".dot1\")\n    let dot2 = document.querySelector(\".dot2\")\n    let dot3 = document.querySelector(\".dot3\")\n\n    if (num === 1) {\n      dot1.classList.add(\"active\")\n      dot1.classList.remove(\"inactive\")\n      dot2.classList.add(\"inactive\")\n      dot3.classList.add(\"inactive\")\n      dot2.classList.remove(\"active\")\n      dot3.classList.remove(\"active\")\n      container.classList.add(\"col-container-1\")\n      container.classList.remove(\"col-container-2\")\n      container.classList.remove(\"col-container-3\")\n    } else if (num === 2) {\n      dot2.classList.add(\"active\")\n      dot2.classList.remove(\"inactive\")\n      dot1.classList.add(\"inactive\")\n      dot3.classList.add(\"inactive\")\n      dot1.classList.remove(\"active\")\n      dot3.classList.remove(\"active\")\n      container.classList.add(\"col-container-2\")\n      container.classList.remove(\"col-container-1\")\n      container.classList.remove(\"col-container-3\")\n    } else if (num === 3) {\n      dot3.classList.add(\"active\")\n      dot3.classList.remove(\"inactive\")\n      dot1.classList.add(\"inactive\")\n      dot2.classList.add(\"inactive\")\n      dot1.classList.remove(\"active\")\n      dot2.classList.remove(\"active\")\n      container.classList.add(\"col-container-3\")\n      container.classList.remove(\"col-container-1\")\n      container.classList.remove(\"col-container-2\")\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"display-wrapper\">\n        <div className=\"title-container\">\n          <h3 className=\"title\">CATCH PHRASE OR SLOGAN <span className=\"title2\">GOES HERE</span></h3>\n        </div>\n        <div className=\"viewport\">\n          <div className=\"col-container col-container-1\">\n            <div className=\"col col1\">\n              <div className=\"col-image-container\">\n                <img className=\"col-image\" src=\"https://picsum.photos/id/102/350/300\" alt=\"raspberries\" />\n              </div>\n              <h4 className=\"col-title\">Column 1 Title</h4>\n              <p className=\"col-paragraph col-paragraph1\">Column 1 Lorem ipsum dolor, sit amet consectetur psa modi omnis adipisicing elit. Aspernatur reprehenderit eius repellat harum, accusamus recusandae? Aspernatur quae beatae sunt eligendi ipsa modi omnis ad? Adipisci provident nesciunt psa modi omnis quos est rem.</p>\n              <div className=\"col-text-container\">\n                <h6 className=\"col-text1\">Column 1 Text1</h6>\n                <p className=\"col-text2\">Column 1 Text2</p>\n              </div>\n            </div>\n            <div className=\"col col2\">\n              <div className=\"col-image-container\">\n                <img className=\"col-image\" src=\"https://picsum.photos/id/239/350/300\" alt=\"dandelion\" />\n              </div>\n              <h4 className=\"col-title\">Column 2 Title</h4>\n              <p className=\"col-paragraph  col-paragraph2\">Column 2 Lorem ipsum dolor, sit amet consectetur psa modi omnis adipisicing elit. Aspernatur reprehenderit eius repellat harum, accusamus recusandae? Aspernatur quae beatae sunt eligendi ipsa modi omnis ad? Adipisci provident nesciunt psa modi omnis quos est rem.</p>\n              <div className=\"col-text-container\">\n                <h6 className=\"col-text1\">Column 2 Text1</h6>\n                <p className=\"col-text2\">Column 2 Text2</p>\n              </div>\n            </div>\n            <div className=\"col col3\">\n              <div className=\"col-image-container\">\n                <img className=\"col-image\" src=\"https://picsum.photos/id/337/350/300\" alt=\"field\" />\n              </div>\n              <h4 className=\"col-title\">Column 3 Title</h4>\n              <p className=\"col-paragraph  col-paragraph3\">Column 3 Lorem ipsum dolor, sit amet consectetur psa modi omnis adipisicing elit. Aspernatur reprehenderit eius repellat harum, accusamus recusandae? Aspernatur quae beatae sunt eligendi ipsa modi omnis ad? Adipisci provident nesciunt psa modi omnis quos est rem.</p>\n              <div className=\"col-text-container\">\n                <h6 className=\"col-text1\">Column 3 Text1</h6>\n                <p className=\"col-text2\">Column 3 Text2</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"dots-container\">\n          <div onClick={()=>{this.slide(1)}} className=\"dots dot1 active\"></div>\n          <div onClick={()=>{this.slide(2)}} className=\"dots dot2 inactive\"></div>\n          <div onClick={()=>{this.slide(3)}} className=\"dots dot3 inactive\"></div>\n        </div>\n        <button className=\"button\" type=\"button\">Read More</button>\n      </div>\n    )\n  }\n}\n\nexport default Display;","import React from 'react';\nimport Display from './Component/Display'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Display />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}